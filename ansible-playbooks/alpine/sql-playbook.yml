---
- hosts: localhost
  name: Set Up DB
  become: yes
  vars:
    mysql_root_password: REDACTED
    mysql_root_password_old: REDACTED
    ansible_become_pass: REDACTED

  tasks:
    - name: Install MySQL
      apk:
        name: ["mysql", "mysql-client"]
        update_cache: yes
        state: present
    - name: Check if mariadb is already setup
      stat:
        path: /var/lib/mysql/mysql # required. The full path of the file/object to get the facts of.
      register: mariadb_data_dir

    - name: create /root/.my.cnf (from template) with password credentials
      template:
        src: .my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        mode: 0600

    - name: Setup mariadb
      command:
        argv: ["/etc/init.d/mariadb", "setup"]
      when: mariadb_data_dir.stat.exists == False
      register: result

    - name: Start mariadb service
      service:
        name: mariadb # required. Name of the service.
        use: auto # not required. The service module actually uses system specific modules, normally through auto detection, this setting can force a specific module.,Normally it uses the value of the 'ansible_service_mgr' fact and falls back to the old 'service' module when none matching is found.
        enabled: true # not required. Whether the service should start on boot. B(At least one of state and enabled are required.)
        state: restarted # not required. choices: reloaded;restarted;started;stopped. C(started)/C(stopped) are idempotent actions that will not run commands unless necessary.  C(restarted) will always bounce the service.  C(reloaded) will always reload. B(At least one of state and enabled are required.) Note that reloaded will start the service if it is not already started, even if your chosen init system wouldn't normally.
        runlevel: sysinit # not required. For OpenRC init scripts (ex: Gentoo) only.  The runlevel that this service belongs to.

    - name: Make sure pymysql is present
      pip:
        name: pymysql
        state: present

    - name: update mysql root password for all root accounts
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_root_password }}"
        login_user: root
        login_password: "{{ mysql_root_password_old }}"
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
